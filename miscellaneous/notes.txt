Here are the csv files containing all ACEP Fuel Meter data collected during the 2019 season.

Created by Doug Keller on July 3rd 2019

Creation Process:

ftp-data => puma_unified_data.nc => puma_product_data.nc => FBK###_final.csv

First, the data was collated from the fuel meter data in the ftp-data directory (the fuel meters send their data to this directory) to a single unified netcdf file (puma_unified_data.nc) using the puma2unified.py script.
Then, (second step) the puma_product_data.nc netcdf file was extracted from the unified netcdf file (puma_unified_data.nc) using the uni_nc2prod_nc.py script.
Lastly, the product netcdf file (puma_product_data.nc) data was copied and restructured into a csv file per fuel meter stove combo (FBK###_final.csv) using the prod_nc2csv.py script.

Metadata:

Each csv file contains the metadata for the stove and the data columns in the first two rows, such as the stove name and location (in degrees), and the data units and descriptions.
Each file contains the time of the measurement, burning state of the stove, cumulative clicks counted by the fuel meter, clicks per interval, US gallons per interval, US gallons per hour per interval, indoor temperature measured by the fuel meter, difference in indoor and outdoor temperature, and the outdoor temperature provided by the SnoTel data collected by the Alaska Ocean Observing System (https://portal.aoos.org/#map).
The files should be easy to open in Microsoft Excel and contain the data in the correct columns.

Notes:

The first data line registering clicks in each file will be 0 as it is the beginning of the reference click count to determine the clicks per interval.
-1 is placed when the stove is off during the time interval.
Different stoves have different time measurement intervals, depending on the model of the fuel meter used (just beware when doing large data analysis scripts).
There may be operational gaps in the data due to adjustments made to the fuel meters.

#########################################

# Miscellaneous Files

Here lie the miscellaneous files that don't have another home.

#########################################

# Data

This is the data used for the data packaging of the fuel meter data.

## Final_csv_Files

The Final_csv_Files is a temporary folder that holds the csv files created by the 

## netCDF_Files

This folder contains all the netCDF files used for data packaging or distribution.

### aoos_snotel_temp.nc

This file was the temperature data for Fairbanks downloaded from the SnoTel data collected by the [Alaska Ocean Observing System](https://portal.aoos.org/#map).

### puma_product_data.nc

This file contains the reduced stove set data for distribution from the puma_unified_data.nc file.

### puma_unified_data.nc

This file contains all the current stove data in a unified netCDF file.

## text_Files

These are the text files used in the data packaging.

### FuelClickConversion.txt

This file contians the theoretical clicks to fuel conversion rates for each stove type.

### FuelConsumption.txt

This file contains the theoretical fuel consumption rates for the stove types.

###########################################

# Matlab Files

Here lie the Matlab files for the fuel meter project.

############################################

# PuMA yaml Inventory Files

These are the PuMA fuel meter inventory files used for the data packaging.

## puma-inventory.yml

This file holds the entire active collection of PuMA devices obtaining data.

## puma-inventory-marco_18-19.yml

This was the yaml file used to produce the data package for Prof. Marco Castillo for the 2018-2019 season.

#######################################################

# Archived Data

Here is where the past final data packages for distribution produced by the data packaging scripts are stored. 

#########################################

# Python Scripts

Here are the python scripts used in packaging the PuMA fuel metere data. They are designed to be run in a pipenv environment. Instructions can be found in the repository main folder README file.

## Pipfile

The Pipfile describes the dependencies used in the pipenv environment runtime. Edit this if script dependencies have changed. It produces a Pipfile.lock when initiated.

## prod_nc2csv.py

This script takes the puma_unified_data.nc file and converts it into csv files for simpler cross platform use.

## puma2uni_nc.py

This script takes the text files collected from the fuel meters and stored in the ftp-data directory, extracts the data and places it into an organized netCDF file (using the puma-inventory.yml file) with the stove information, fuel consumption, and temperature information.

## pumapy.py

This file contains all the functions used in the scripts for data packaging.

## uni_nc2prod_nc.py

This script transcribes the puma_unified_data.nc file into a reduced puma_product_data.nc file.

##############################################
